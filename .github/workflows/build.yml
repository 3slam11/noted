name: Build and Release

on:
  push:
    tags:
      - '*.*.*'

jobs:
  # Job to build the Android APKs
  build-android:
    runs-on: ubuntu-latest
    steps:
      - name: Checkout repository
        uses: actions/checkout@v4

      - name: Set up Java
        uses: actions/setup-java@v4
        with:
          distribution: 'temurin'
          java-version: '17'

      - name: Set up Flutter
        uses: subosito/flutter-action@v2
        with:
          flutter-version-file: pubspec.yaml
          
      - name: Create .env file
        run: |
          echo "DEFAULT_GOOGLE_BOOKS_API_KEY=${{ secrets.DEFAULT_GOOGLE_BOOKS_API_KEY }}" >> .env
          echo "DEFAULT_RAWG_API_KEY=${{ secrets.DEFAULT_RAWG_API_KEY }}" >> .env
          echo "DEFAULT_TMDB_API_KEY=${{ secrets.DEFAULT_TMDB_API_KEY }}" >> .env

      - name: Get Flutter dependencies
        run: flutter pub get

      - name: Create Keystore and key.properties
        run: |
          echo "${{ secrets.KEYSTORE_BASE64 }}" | base64 --decode > android/app/keystore.jks
          echo "storePassword=${{ secrets.STORE_PASSWORD }}" >> android/key.properties
          echo "keyPassword=${{ secrets.KEY_PASSWORD }}" >> android/key.properties
          echo "keyAlias=${{ secrets.KEY_ALIAS }}" >> android/key.properties
          echo "storeFile=keystore.jks" >> android/key.properties

      - name: Build APK
        run: flutter build apk --release --split-per-abi

      - name: Rename APK files
        run: |
          cd build/app/outputs/flutter-apk/
          for file in app-*-release.apk; do
            new_name=$(echo "$file" | sed -e 's/app-/noted-/' -e 's/-release//')
            mv "$file" "$new_name"
          done
          ls -l

      - name: Upload APK artifacts
        uses: actions/upload-artifact@v4
        with:
          name: android-apks
          path: build/app/outputs/flutter-apk/*.apk

  build-windows:
    runs-on: windows-latest 
    steps:
      - name: Checkout repository
        uses: actions/checkout@v4

      - name: Set up Flutter
        uses: subosito/flutter-action@v2
        with:
          flutter-version-file: pubspec.yaml

      - name: Create .env file
        run: |
          echo "DEFAULT_GOOGLE_BOOKS_API_KEY=${{ secrets.DEFAULT_GOOGLE_BOOKS_API_KEY }}" >> .env
          echo "DEFAULT_RAWG_API_KEY=${{ secrets.DEFAULT_RAWG_API_KEY }}" >> .env
          echo "DEFAULT_TMDB_API_KEY=${{ secrets.DEFAULT_TMDB_API_KEY }}" >> .env
          
      - name: Get Flutter dependencies
        run: flutter pub get

      - name: Enable Windows build
        run: flutter config --enable-windows-desktop

      - name: Build Windows executable
        run: flutter build windows --release

      - name: Archive Windows release
        run: |
          $version = "${{ github.ref_name }}"
          Compress-Archive -Path build\windows\x64\runner\Release\* -DestinationPath "noted-windows-$version.zip"
      
      - name: Upload Windows artifact
        uses: actions/upload-artifact@v4
        with:
          name: windows-release
          path: noted-windows-*.zip

  # Job to create the GitHub Release after both builds succeed
  release:
    runs-on: ubuntu-latest
    needs: [build-android, build-windows] 
    permissions:
      contents: write 
    steps:
      - name: Checkout repository
        uses: actions/checkout@v4

      - name: Download Android artifacts
        uses: actions/download-artifact@v4
        with:
          name: android-apks
          path: release-assets

      - name: Download Windows artifact
        uses: actions/download-artifact@v4
        with:
          name: windows-release
          path: release-assets

      - name: List downloaded files
        run: ls -l release-assets
        
      - name: Create Release
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
        run: |
          CHANGELOG_FILE=$(ls -v fastlane/metadata/android/en-US/changelogs/*.txt | tail -n 1)
          gh release create ${{ github.ref_name }} \
            --title "Noted v${{ github.ref_name }}" \
            --notes-file "$CHANGELOG_FILE" \
            release-assets/*